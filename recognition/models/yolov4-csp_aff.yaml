# parameters
nc: 3  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors: # not actually used but length must be equal to z_anchors
  #- [0.80,0.75,0.70,0.65,0.60]  # P3/8
  #- [0.80,0.75,0.70,0.65,0.60]  # P4/16
  #- [0.80,0.75,0.70,0.65,0.60]  # P5/32
  #- [0.60,0.65,0.70,0.75,0.80]  # P3/8
  #- [0.60,0.65,0.70,0.75,0.80]  # P4/16
  #- [0.60,0.65,0.70,0.75,0.80]  # P5/32
  #- [0.25,0.75]  # P3/8
  #- [0.25,0.75]  # P4/16
  #- [0.25,0.75]  # P5/32
  - [0.0,0.25,0.5,0.75]  # P3/8
  #- [0.0,0.5]  # P4/16
  #- [0.0,0.5]  # P5/32
  
# yolov4-csp backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [16, 3, 1]],  # 0
   [-1, 1, Conv, [32, 3, 2]],  # 1-P1/2
   [-1, 1, Bottleneck, [64]],
   [-1, 1, Conv, [64, 3, 2]],  # 3-P2/4
   [-1, 2, BottleneckCSP, [64]],
   [-1, 1, Conv, [128, 3, 2]],  # 5-P3/8
   [-1, 8, BottleneckCSP, [128]],
   [-1, 1, Conv, [256, 3, 2]],  # 7-P4/16
   [-1, 8, BottleneckCSP, [256]],
   [-1, 1, Conv, [512, 3, 1]], # 9-P5/32
   [-1, 4, BottleneckCSP, [512]],  # 10
  ]

# yolov4-csp head
# na = len(anchors[0])
head:
  [[-1, 1, SPPCSP, [256]], # 11
   [-1, 1, Conv, [128, 1, 1]],
   [-1, 1, nn.Upsample, [None, 1, 'nearest']],
   [8, 1, Conv, [128, 1, 1]], # route backbone P4
   [[-1, -2], 1, Concat, [1]],
   [-1, 2, BottleneckCSP2, [128]], # 16 
   [-1, 1, Conv, [64, 1, 1]],
   [-1, 1, nn.Upsample, [None, 4, 'nearest']],
   [6, 1, Conv, [64, 1, 1]], # route backbone P3
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, -3], 1, Concat, [1]],
   [-1, 2, BottleneckCSP2, [128]], # 22
   [-1, 1, Conv, [128, 3, 1]],
   #[-2, 1, Conv, [128, 3, 1]],
   #[[-1, 18], 1, Concat, [1]],  # cat
   #[-1, 2, BottleneckCSP2, [128]], # 26
   #[-1, 1, Conv, [256, 3, 1]],
   #[-2, 1, Conv, [256, 3, 1]],
   #[[-1, 11], 1, Concat, [1]],  # cat
   #[-1, 2, BottleneckCSP2, [256]], # 30
   #[-1, 1, Conv, [512, 3, 1]],

   [[23], 1, Detect, [nc, anchors]],   # Detect(P3, P4, P5)
  ]
  
