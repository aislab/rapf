//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Ur3Moveit
{
    public class MoverServiceRequest : Message
    {
        public const string RosMessageName = "ur3_moveit/MoverService";

        public UR3MoveitJoints joints_input;
        public Geometry.Pose[] poses;
        //public Geometry.Pose pose1;
        //public Geometry.Pose pose2;

        public MoverServiceRequest()
        {
            this.joints_input = new UR3MoveitJoints();
            this.poses = new Geometry.Pose[0];
            //this.pose1 = new Geometry.Pose();
            //this.pose2 = new Geometry.Pose();
        }

        //public MoverServiceRequest(UR3MoveitJoints joints_input, Geometry.Pose pose1, Geometry.Pose pose2)
        public MoverServiceRequest(UR3MoveitJoints joints_input, Geometry.Pose[] poses)
        {
            this.joints_input = joints_input;
            this.poses = poses;
            //this.pose1 = pose1;
            //this.pose2 = pose2;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(joints_input.SerializationStatements());
            
            listOfSerializations.Add(BitConverter.GetBytes(poses.Length));
            foreach(var entry in poses)
                listOfSerializations.Add(entry.Serialize());

            //listOfSerializations.AddRange(pose1.SerializationStatements());
            //listOfSerializations.AddRange(pose2.SerializationStatements());
            return listOfSerializations;
            
            
            //var listOfSerializations = new List<byte[]>();
            //listOfSerializations.AddRange(joints_input.SerializationStatements());
            //listOfSerializations.AddRange(pose1.SerializationStatements());
            //listOfSerializations.AddRange(pose2.SerializationStatements());
            //return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.joints_input.Deserialize(data, offset);
            var poseArrayLength = DeserializeLength(data, offset);
            //offset += 4;
            this.poses= new Geometry.Pose[poseArrayLength];
            for(var i = 0; i < poseArrayLength; i++)
            {
                this.poses[i] = new Geometry.Pose();
                offset = this.poses[i].Deserialize(data, offset);
            }
            //offset = this.pose1.Deserialize(data, offset);
            //offset = this.pose2.Deserialize(data, offset);
            return offset;
            
            
            //offset = this.joints_input.Deserialize(data, offset);
            //offset = this.pose1.Deserialize(data, offset);
            //offset = this.pose2.Deserialize(data, offset);
            //return offset;
        }

        public override string ToString()
        {
            return "MoverServiceRequest: " +
            "\njoints_input: " + joints_input.ToString() +
            "\nposes: " + System.String.Join(", ", poses.ToList());
            //"\npose1: " + pose1.ToString() +
            //"\npose2: " + pose2.ToString();
        }
    }
}
